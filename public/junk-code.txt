 <div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globground-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20ait fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRoutebackground-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = <div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globground-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20ait fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;<div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRoutebackground-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = <div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease;<section className="hero"> align-items: center; const ctx = <div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = <div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = <div className="container">useEffect(() => { setState(prev => !prev); }, []); export default function Home() { return <h1 className="title">Hello</h1>; } background-color: #0f0; const getServerSideProps = async () => { return { props: {} }; }; display: flex; const [value, setValue] = useState(0); <meta name="viewport" content="width=device-width, initial-scale=1.0"> border-radius: 12px; export const handler = (req, res) => { res.status(200).json({ ok: true }); }; .btn:hover { opacity: 0.8; } <img src="/logo.png" alt="logo" /> useRouter().push('/home'); font-family: 'Fira Code'; async function loadData() { const res = await fetch('/api/data'); } color: #fff; <NextScript /> getInitialProps = async (ctx) => { return { pageProps: {} }; } justify-content: center; const Component = dynamic(() => import('../components/Button')); <form method="POST">onClick={() => console.log('click')};</form> padding: 10px 20px; <input type="text" class="input" /> const Layout = ({ children }) => <main>{children}</main>; import '../styles/globals.css'; height: 100vh; export async function getStaticPaths() {} const router = useRouter(); font-size: 14px; <script src="bundle.js"></script> .grid { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); } transform: scale(1.1); transition: all 0.3s ease; <section className="hero"> align-items: center; const ctx = canvas.getContext("2d"); <link rel="stylesheet" href="style.css"> position: absolute; z-index: -1; useRef(null); border: 1px solid #ccc; gap: 12px;
